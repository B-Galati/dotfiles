#!/bin/bash
#
# How to use:
#     archive-project [-f] /path/to/source /path/to/destination
#

set -euo pipefail

source "${HOME}/.functions"

usage() {
    echo "Usage: $(basename $0) [-f] /path/to/source /path/to/destination"
}

main() {
    local force=false
    while getopts ":f" opt; do
        case ${opt} in
            f)
                force=true
                ;;
            *)
                output_error "Invalid option: -${OPTARG}" >&2
                exit 1
                ;;
        esac
    done

    shift $((OPTIND - 1))

    [[ ! $# -eq 2 ]] && { usage; exit 1; }

    local input_dir="${1}"
    local output_dir="${2}"
    local archive_name
    archive_name="${output_dir}/$(basename "${input_dir}").tar.gz"

    [[ ! -d "${input_dir}" ]] && { output_error "${input_dir} is not a directory"; exit 2; }
    [[ ! -d "${output_dir}" ]] && { output_error "${output_dir} is not a directory"; exit 2; }

    # Confirm the operation if force flag is not used
    if ! $force; then
        read -p "It will generate archive ${archive_name}. Are you sure? (y/n) " -n 1
        echo
        [[ ! ${REPLY} =~ ^[Yy]$ ]] && { echo "Operation canceled."; exit 0; }
    fi

    #clean_git_directory "${input_dir}"
    create_archive "${input_dir}" "${archive_name}"
}

# Function to create the archive while excluding specified patterns
create_archive() {
    local input_dir="${1}"
    local archive_name="${2}"

    tar -czf "${archive_name}" \
        --exclude-vcs-ignores \
        --exclude-backups \
        --exclude=var/cache/* \
        --exclude=var/logs/* \
        --exclude=var/mysql/* \
        --exclude=var/legacy/* \
        --exclude=vendor/* \
        --exclude=node_modules/* \
        --exclude=bower_components/* \
        --exclude=public/build/* \
        --exclude=public/built/* \
        --exclude=public/bundles/* \
        --exclude=web/build/* \
        --exclude=web/built/* \
        --exclude=web/bundles/* \
        --exclude=debug/* \
        --exclude=target/* \
        --exclude=.yarn/* \
        --exclude=.vitepress/* \
        --exclude=.cache/* \
        --exclude=.temp/* \
        --exclude=.nuxt/* \
        --exclude=out/* \
        --exclude=dist/* \
        --exclude=build/* \
        "${input_dir}"

    output_success "Archive ${archive_name} created successfully."
}

main "$@"
